name: Build and Release Plugin

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download TS3AudioBot DLLs
        run: |
          Invoke-WebRequest -Uri "https://splamy.de/api/nightly/projects/ts3ab/master/download" -OutFile "ts3ab.zip"

      - name: Extract DLLs
        run: |
          Expand-Archive -Path "ts3ab.zip" -DestinationPath "ts3ab"
          Copy-Item "ts3ab/TS3AudioBot.dll" -Destination "YunPlugin/lib/TS3AudioBot.dll" -Force
          Copy-Item "ts3ab/TSLib.dll" -Destination "YunPlugin/lib/TSLib.dll" -Force
          Copy-Item "ts3ab/NLog.dll" -Destination "YunPlugin/lib/NLog.dll" -Force
          Copy-Item "ts3ab/Newtonsoft.Json.dll" -Destination "YunPlugin/lib/Newtonsoft.Json.dll" -Force

      - name: Restore NuGet packages
        run: dotnet restore "YunPlugin/YunPlugin.sln"

      - name: Build solution
        run: dotnet build "YunPlugin/YunPlugin.sln" --configuration Release

      - name: Upload Build Artifacts (DLLs and PDBs)
        uses: actions/upload-artifact@v4
        with:
          name: YunPlugin
          path: |
            YunPlugin/bin/Release/netcoreapp3.1/YunBot.dll
            YunPlugin/bin/Release/netcoreapp3.1/YunBot.pdb

  docker-build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore NuGet packages
        run: dotnet restore "YunPlugin/YunPlugin.sln"

      - name: Build solution (with self-contained dependencies)
        run: dotnet build "YunPlugin/YunPlugin.sln" --configuration Release

      - name: Upload Docker Build Artifacts (DLLs and PDBs)
        uses: actions/upload-artifact@v4
        with:
          name: YunPlugin-Docker
          path: |
            YunPlugin/bin/Release/netcoreapp3.1/YunBot.dll
            YunPlugin/bin/Release/netcoreapp3.1/YunBot.pdb

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build, docker-build]

    steps:
      - name: Download YunPlugin build files
        uses: actions/download-artifact@v4
        with:
          name: YunPlugin
          path: build-files

      - name: Download YunPlugin docker build files
        uses: actions/download-artifact@v4
        with:
          name: YunPlugin-Docker
          path: docker-files

      - name: Compress Build Files
        run: |
          zip -j YunPlugin.zip build-files/*

      - name: Compress Docker Build Files
        run: |
          zip -j YunPlugin-Docker.zip docker-files/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            YunPlugin.zip
            YunPlugin-Docker.zip